import json
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
def load_resources(filename='—Ä–µ—Å—É—Ä—Å—ã.json'):  # –∏–ª–∏ 'resources.json', –µ—Å–ª–∏ —É —Ç–µ–±—è —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è
    with open(filename, encoding='utf-8') as f:
        return json.load(f)

RESOURCES = load_resources()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –±—ã—Å—Ç—Ä—ã–º —Å—Å—ã–ª–∫–∞–º. "
        "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑—É (–∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ), –∏ —è –Ω–∞–π–¥—É –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ —Ä–µ—Å—É—Ä—Å.\n\n"
        "–ï—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞ /all ‚Äî –ø–æ–∫–∞–∂—É –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã.\n"
        "–î–ª—è –ø–æ–∏—Å–∫–∞ –≤–≤–µ–¥–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: –ø–æ—á—Ç–∞, –¥–æ–∫–∞, support, gpt, –ø–æ—Ä—Ç–∞–ª –∏ —Ç.–¥."
    )
    await update.message.reply_text(text)

# –í—ã–≤–æ–¥ –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–æ–º–∞–Ω–¥–æ–π /all
async def all_resources(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not RESOURCES:
        await update.message.reply_text("–°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—É—Å—Ç.")
        return
    message = "–í—Å–µ —Ä–µ—Å—É—Ä—Å—ã:\n\n"
    for res in RESOURCES:
        message += f"{res['name']}: {res['url']}\n"
    # –¢–µ–ª–µ–≥—Ä–∞–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 4096 —Å–∏–º–≤–æ–ª–∞–º–∏, —Ä–∞–∑–±–∏–≤–∞–µ–º –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    for i in range(0, len(message), 4000):
        await update.message.reply_text(message[i:i+4000])

# –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
def search_resources(query):
    query = query.lower()
    results = []
    for res in RESOURCES:
        keywords = res['keywords'] + [res['name'].lower()]
        if any(query in kw.lower() for kw in keywords):
            results.append(res)
    return results

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî –ø–æ–∏—Å–∫ —Ä–µ—Å—É—Ä—Å–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    matches = search_resources(text)
    if not matches:
        await update.message.reply_text("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ —ç—Ç–æ–º—É –∑–∞–ø—Ä–æ—Å—É.")
        return
    keyboard = [
        [InlineKeyboardButton(res['name'], url=res['url'])]
        for res in matches
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞—à—ë–ª —Ç–∞–∫–∏–µ —Ä–µ—Å—É—Ä—Å—ã:", reply_markup=reply_markup)

def main():
    # –í–°–¢–ê–í–¨ –°–Æ–î–ê —Å–≤–æ–π —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞!
    app = Application.builder().token("8473436388:AAHzgKeLC7qatCaHbdNuVSeLH6UJjrhjFS0").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("all", all_resources))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()

if __name__ == '__main__':
    main()
